########################################################################
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this file, to deal in the File without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the File, and to permit persons to whom the
# File is furnished to do so, subject to the following condition:
#
# THE FILE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE FILE OR
# THE USE OR OTHER DEALINGS IN THE FILE.

########################################################################
#Inspired by https://ffmpeg.org/trac/ffmpeg/wiki/UbuntuCompilationGuide

#OMake Powered by David LE BLOND <david.le.blond.95@gmail.com>
########################################################################
# Phony targets are scoped, so you probably want to declare them first.
#

.PHONY: all install clean dependencies usage remove_all complete_clean get_fdk-aac clean_fdk-aac getlibvpx getffmpeg getvlc ffmpeg_libvpx ffmpeg_libaacplus ffmpeg_x264 ffmpeg_x264_libaacplus ffmpeg_x264_libvpx ffmpeg_libvpx_libaacplus getit


########################################################################
# My configuration.
#
UBUNTU=
ASM=$(YASM)
#
################################################


CONFIGURE_FLAGS[]=
# --prefix=/usr 
# --libdir=/usr/lib64 #uncomment if your system is 64 bit

dependencies:
 sudo apt-get update
 if $(defined UBUNTU) 
  sudo apt-get -y install autoconf build-essential checkinstall git libfaac-dev libgpac-dev \
  libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev librtmp-dev libtheora-dev \
  libtool libvorbis-dev pkg-config texi2html yasm zlib1g-dev
 else
   sudo apt-get -y install autoconf build-essential checkinstall git libfaac-dev libgpac-dev \
  libjack-jackd2-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev \
  librtmp-dev libsdl1.2-dev libtheora-dev libtool libva-dev libvdpau-dev libvorbis-dev \
  libx11-dev libxext-dev libxfixes-dev pkg-config texi2html yasm zlib1g-dev

# Assembler Compiler
YASM_VERSION=$(YASM) --version
NASM_VERSION=$(NASM) -version

if $(VERBOSE)
 echo Assembler version
 $(YASM_VERSION)
 $(NASM_VERSION) 
#TODO: check yasm version > 0.6.0


################################################

CP[]=cp -uv
CP_FLAGS[]=

if $(VERBOSE)
 CP_FLAGS+=--verbose

#Copy project.om to project/OMakefile
export .RULE
public.DeployOM(project) =
 section
  $(file $(project)/OMakefile): $(file $(project).om)
   println($"in rule")
   #$(CP) $(file $(project).om) $@
   .SUBDIRS: $(project)
  value $@

################################################

protocol_fdk-aac=$"git"
site_fdk-aac=$"github.com"
user_fdk-aac=$"mstorsjo"
project_fdk-aac=$"fdk-aac"

G=$(Git.new $(protocol_fdk-aac), $(site_fdk-aac), $(user_fdk-aac), $(project_fdk-aac))
G.print()
try
 G.clone()
default
 
get_fdk-aac:
 println($"About to get "$(project_fdk-aac))
 $(CP) $(file $(project_fdk-aac).om) $(project_fdk-aac)/OMakefile
 .SUBDIRS: $(project_fdk-aac)

clean_fdk-aac:
 section
  rm -rf $(extension_fdk-aac)

################################################

protocol_libvpx=http
site_libvpx=git.chromium.org
extension_libvpx=libvpx
user_livpx=webm

getlibvpx:
 git clone --depth 1 http://git.chromium.org/webm/libvpx.git
 cp libvpx.om ./libvpx/OMakefile

OMADE=./ffmpeg/OMakefile

getffmpeg:
 git clone --depth 1 git://source.ffmpeg.org/ffmpeg
 cp ffmpeg.om ./ffmpeg/OMakefile
 section
  .SUBDIRS: x264 ffmpeg vlc libaacplus libvpx #rtmpdump 

OMADE=./libaacplus/OMakefile

getlibaacplus: libaacplus/download
 cp libaacplus.om ./libaacplus/OMakefile


getvlc:

fresh: getlibaacplus getlibvpx getffmpeg getfdk-aac getvlc

# build scenarii
# what's interesting
ffmpeg_libvpx: libvpx

ffmpeg_libaacplus: libaacplus

ffmpeg_x264: x264

ffmpeg_libvpx_libaacplus: libvpx libaacplus

ffmpeg_x264_libaacplus: x264 libaacplus

#And finally, the best of all
ffmpeg_x264_libvpx_libaacplus: x264 libvpx libaacplus

all: ffmpeg_x264_libvpx_libaacplus
 echo $'Well done !!'

complete_clean:
 sudo apt-get remove ffmpeg x264 libav-tools libvpx-dev libx264-dev

remove_all:
 sudo apt-get -y autoremove autoconf build-essential checkinstall fdk-aac ffmpeg git libfaac-dev libgpac-dev \
  libjack-jackd2-dev libmp3lame-dev librtmp-dev libsdl1.2-dev libtheora-dev libtool libva-dev libvdpau-dev \
  libvorbis-dev libvpx libx11-dev libxfixes-dev pkg-config qt-faststart texi2html x264 yasm zlib1g-dev

  #rm -rf x264 fdk-aac libvpx ffmpeg

usage:
 println ($"If you already have looked at the documentation you may grep .PHONY for a list of available commands")

.DEFAULT: usage


